Open questions
1. Don't know how it is going to behave for existing tables
2. Need to check the ownership for the existing files/folders (HDFS)
3. I never tried all the steps on multi nodes
4. I am not sure how it is going to impact sqoop imports. Need to verify
5. Need to verify how it is going to impact Hive table import using Shell script. Need to verify
6. Currently sentry tested without High Availability... Need to test how Sentry will work with High availability 
7. Folder ownership to be verified. it is expected to set the owner as hive:hive for all the folder... to be verified
8. It is important to turn on HDFS Sentry sync: Unless turn on HDFS Sentry sync, users are not expected to be able to look at the tables via HDFS
http://www.cloudera.com/documentation/enterprise/latest/topics/sg_hdfs_sentry_sync.html#xd_583c10bfdbd326ba--69adf108-1492ec0ce48--7f3a


hadoop fs -ls /user/hive/warehouse
 
drwxrwxrwt   - fjauregui   hive           0 2016-12-06 16:52 /user/hive/warehouse/adaptive.db
drwxrwxrwt   - oracle      hive           0 2015-12-16 11:28 /user/hive/warehouse/ap_lms.db
drwxrwxrwt   - hive        hive           0 2015-08-26 20:24 /user/hive/warehouse/ap_stest
drwxrwxrwt   - oracle      hive           0 2016-11-22 15:32 /user/hive/warehouse/archive.db



-------------
1. Login to Hue as admin
	a. Create three admin groups: hue, hive and impala. Create one normal group: normal_grp
	b. create three users groups: hue, hive and impala. Assign the above groups to thease groups
	c. Create a user kumar1 has access to all the above admin group. Kumar2 has access to only normal_grp
	d. Now, let’s make this user (hue, hive, impala, kumar1) a ‘superuser’ in HUE through the same Users and groups screen in Hue 

1.1.  The user and group that I am going to be using as admin or a general user, should exist as a real user on your UNIX/LINUX system. 

# Make sure the below gruoups are already exists
groupadd hive; 
groupadd hue; 
groupadd impala; 
groupadd analyst;
groupadd admin;

useradd hive; 
usermod -a -G hive,hdfs hive;
useradd hue; 
usermod -a -G hue hue;
useradd impala; 
usermod -a -G impala impala;

useradd kumar1 ; passwd kumar1;
usermod -a -G hive,hue,impala,admin,analyst kumar1

useradd kumar2 ; passwd kumar2;
usermod -a -G analyst kumar2

useradd kumar3 ; passwd kumar3;
useradd guest ; passwd guest;


---- Use case to maintain confidential columns using VIEW
1. Add a new group in LINUX 
	groupadd special_grp;
	usermod -a -G special_grp kumar1

2. Add a new group called "special_grp" in HUE and assign kumar1 part of special_grp
	
3. add a table student_info to src_students.db
	create database src_students;
	create table src_students.student_info(STDID int, STDNAME string, SSN int);
	insert into student_info values (10, 'Mark', 12345);
	insert into student_info values (20, 'James', 22342);
	insert into student_info values (30, 'Rose', 623423);
 
4. assign src_students.db to special_grp. (Using sentry)

5. create a view qa.student_info_vw on top of src_students.student_info and remove the confidential columns in the view. So that kumar2 can access qa.student_info_vw

Ex: CREATE OR REPLACE VIEW qa.student_info_vw AS  select stdid from src_students.student_info



----

2. Update Sentry admin group with following information: Admin groups
<property>
  <name>sentry.service.admin.group</name>
  <value>hive,impala,hue</value>
 </property>
   
CM -> Sentry -> Configuration -> sentry.service.admin.group (Make sure it has Hive, Impala and Hue)

2.1. Update sentry user with following information: Allowed Connecting Users

<property>
    <name>sentry.service.allow.connect</name>
    <value>hive,impala,hue,hdfs,solr</value>
  </property>
  

3. The Hive warehouse directory must be owned by the Hive user and group.

set hive.warehouse.subdir.inherit.perms to true in hive-site.xml
kinit hdfs@AWS.COM			# Login as hdfs
hadoop fs -chmod -R 771 /user/hive/warehouse
hadoop fs -chown -R hive:hive /user/hive

$ sudo -u hdfs hdfs dfs -chmod -R 771 /user/hive/warehouse
$ sudo -u hdfs hdfs dfs -chown -R hive:hive /user/hive/warehouse

4. Make sure hive enabled with Kerbeors

# Try the below beeline command before and after kinit
beeline -u "jdbc:hive2://<hostname>:10000/default;principal=hive/<hostname>@AWS.COM"
beeline -u "jdbc:hive2://<hostname>:10000/default;principal=hive/<hostname>@AWS.COM"

5. Make sure impala service is added and enabled with kerberos

# Try the below command before and after kinit
>impala-shell

6. Disable impersonation for HiveServer2 in the Cloudera Manager Admin Console:
Go to the Hive service.
Click the Configuration tab.
Select Scope > HiveServer2.
Select Category > Main.
Uncheck the HiveServer2 Enable Impersonation checkbox.

7. Enabling the Sentry Service for Hive
Go to the Hive service.
Click the Configuration tab.
Select Scope > Hive (Service-Wide).
Select Category > Main.
Locate the Sentry Service property and select Sentry.
Click Save Changes to commit the changes.
Restart the Hive service.

8. YARN, enable the Hive user to submit YARN jobs.
Open the Cloudera Manager Admin Console and go to the YARN service.
Click the Configuration tab.
Select Scope > NodeManager.
Select Category > Security.
Ensure the Allowed System Users property includes the hive user. If not, add hive.
Click Save Changes to commit the changes.
Repeat all steps for every NodeManager role group for the YARN service that is associated with Hive, if more than one exists.
(add hue and impala)
Restart the YARN service.



9. Enabling the Sentry Service for Impala
Enable the Sentry service for Hive (as instructed above).
Go to the Impala service.
Click the Configuration tab.
Select Scope > Impala (Service-Wide).
Select Category > Main.
Locate the Sentry Service property and select Sentry.
Click Save Changes to commit the changes.
Restart Impala.

10. Enabling the Sentry Service for Hue
Hue uses a Security app to make it easier to interact with Sentry. When you set up Hue to manage Sentry permissions, make sure that users and groups are set up correctly. Every Hue user connecting to Sentry must have an equivalent OS-level user account on all hosts so that Sentry can authenticate Hue users. Each OS-level user should also be part of an OS-level group with the same name as the corresponding user's group in Hue.

For more information on using the Security app, see the related blog post.

Enable the Sentry service as follows:
Enable the Sentry service for Hive and Impala (as instructed above).
Go to the Hue service.
Click the Configuration tab.
Select Scope > Hue (Service-Wide).
Select Category > Main.
Locate the Sentry Service property and select Sentry.
Click Save Changes to commit the changes.
Restart Hue.

11. kadmin.local
addprinc -pw hadoop1 hive@AWS.COM
addprinc -pw hadoop1 hue@AWS.COM
CM -> Admin -> security -> Generate missing credentials


-----------Setup Privilege via CLI

https://www.cloudera.com/documentation/enterprise/5-5-x/topics/sg_hive_sql.html#concept_c5d_11p_r4
https://www.cloudera.com/documentation/enterprise/5-6-x/topics/sg_hdfs_sentry_sync.html
https://www.cloudera.com/documentation/enterprise/5-5-x/topics/sg_hive_sql.html
https://cwiki.apache.org/confluence/display/Hive/SQL+Standard+Based+Hive+Authorization


CREATE ROLE [role_name];
GRANT ROLE role_name [, role_name] TO GROUP <groupName> [,GROUP <groupName>]

create role role_analyst;
grant role role_ to 


It has before and after Hive 0.13

REVOKE [GRANT OPTION FOR]
    priv_type [, priv_type ] ...
    ON table_or_view_name
    FROM principal_specification [, principal_specification] ... ;
 
principal_specification
  : USER user
  | ROLE role
 
priv_type
  : INSERT | SELECT | UPDATE | DELETE | ALL


## Hive SQL Syntax for use with Sentry
https://www.cloudera.com/documentation/enterprise/5-5-x/topics/sg_hive_sql.html



---------- Issue1:
Error: Error while compiling statement: FAILED: SemanticException No valid privileges
 User hdfs does not have privileges for CREATEDATABASE
 The required privileges: Server=server1->action=*; (state=42000,code=40000)

 Ans:
 Login as hive, select server1 and add privilege to URI as follows
 URI  server=server1     action=ALL
 
----------- Issue 2:  Hue - Sentry tables - Tables dissapear when enable sentry in Hive
http://community.cloudera.com/t5/Security-Apache-Sentry/Hue-Sentry-tables-Tables-dissapear-when-enable-sentry-in-Hive/m-p/40755#U40755
 
I created an admin role via beeline:
 
Obtained hive ticket
kinit -k -t run/cloudera-scm-agent/process/218-hive-HIVESERVER2/hive.keytab hive/node01.test.com@TEST.COM
Connected to hive with beeline using hive keytab.
beeline>!connect jdbc:hive2://node01.test.com:10000/default;principal=hive/node01.test.com@TEST.COM
Created the role admin.
beeline>Create role admin;
Granted priviledges to admin role.
GRANT ALL ON SERVER server1 TO ROLE admin WITH GRANT OPTION;
Assign the role to a group.
GRANT ROLE admin TO GROUP administrators;
After these steps all users within the group administrators are allowed to manage hive priviledges


------------Issue3: Direct Active Directory Integration for Kerberos Authentication

http://blog.cloudera.com/blog/2014/07/new-in-cloudera-manager-5-1-direct-active-directory-integration-for-kerberos-authentication/




------------issue 4: Synchronizing HDFS ACLs and Sentry Permissions

Unless you turn on HDFS Sentry sync, users are not expected to be able to look at the tables via HDFS

----------

/user/hive/sentry/sentry-provider.ini
[database]
db1 = hdfs://sentry-1.ent.couldera.com:8020/user/hive/sentry/db1/ini

[groups]
admin = admin_role

[roles]
admin_role = server=server1

----
/user/hive/sentry/db1.ini
[groups]
dep1_admin = db1_admin_role
dep1_analyst = db1_real_role

[roles]
db1_admin_role = 

#################################################################
====================== Configure ACL

1. Create the user space
sudo -u hdfs hadoop fs -mkdir /user/kumar1;
sudo -u hdfs chown kumar:kumar /user/kumar1;

2. Switch user:
sudo -u kumar2

3. Enable ACL in HDFS: 

Access Control List

> hadoop fs
setfacl 
getfacl

>hadoop fs -setfacl <path: it could be a file/directory>
>hadoop fs -setfacl
http://www.cloudera.com/documentation/enterprise/latest/topics/sg_authorization.html
https://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.4.0/bk_hdfs_admin_tools/content/configuring_acls_hdfs.html

Set dfs.namenode.acls.enabled property to "true" to enable support for ACLs. 
ACLs are disabled by default. When ACLs are disabled, the NameNode rejects all attempts to set an ACL

<property>
  <name>dfs.namenode.acls.enabled</name>
  <value>true</value>
</property>

4. Setup ACL 
https://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.4.0/bk_hdfs_admin_tools/content/using_cli_commands_create_list_acls.html

Examples:
hdfs dfs -setfacl -m user:hadoop:rw- /file
hdfs dfs -setfacl -x user:hadoop /file
hdfs dfs -setfacl -b /file
hdfs dfs -setfacl -k /dir
hdfs dfs -setfacl --set user::rw-,user:hadoop:rw-,group::r--,other::r-- /file
hdfs dfs -setfacl -R -m user:hadoop:r-x /dir
hdfs dfs -setfacl -m default:user:hadoop:r-x /dir

Tip: After ACL setup the folers will have + at the end as follows: drwxr-xr-x+


----------------------------------------------Known issue:
Hue - Sentry tables - Tables dissapear when enable sentry in Hive

http://community.cloudera.com/t5/Security-Apache-Sentry/Hue-Sentry-tables-Tables-dissapear-when-enable-sentry-in-Hive/m-p/40755#U40755

So I created an admin role via beeline:
 
Obtained hive ticket
kinit -k -t run/cloudera-scm-agent/process/218-hive-HIVESERVER2/hive.keytab hive/node01.test.com@TEST.COM
Connected to hive with beeline using hive keytab.
beeline>!connect jdbc:hive2://node01.test.com:10000/default;principal=hive/node01.test.com@TEST.COM
Created the role admin.
beeline>Create role admin;
Granted priviledges to admin role.
GRANT ALL ON SERVER server1 TO ROLE admin WITH GRANT OPTION;
Assign the role to a group.
GRANT ROLE admin TO GROUP administrators;
After these steps all users within the group administrators are allowed to manage hive priviledges


